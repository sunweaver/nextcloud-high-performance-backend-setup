<INCLUDE_SNIPPET_SIGNALING_UPSTREAM_SERVERS>

server {
  listen 0.0.0.0:80;
  listen [::]:80 ipv6only=on;

  server_name <SERVER_FQDN>;
  # security - prevent information disclosure about server version
  server_tokens off;

  location / {
    rewrite     ^   https://$host$request_uri? permanent;
  }

  access_log  /var/log/nginx/<SERVER_FQDN>_access.log;
  error_log   /var/log/nginx/<SERVER_FQDN>_error.log;
}

server {
  listen 0.0.0.0:443 ssl;
  listen [::]:443 ipv6only=on ssl;

  root /var/www/html;

  ## Strong SSL Security
  # RSA certificates
  ssl_certificate <SSL_CERT_PATH_RSA>;
  ssl_certificate_key <SSL_CERT_KEY_PATH_RSA>;
  # ECC certificates
  ssl_certificate <SSL_CERT_PATH_ECDSA>;
  ssl_certificate_key <SSL_CERT_KEY_PATH_ECDSA>;

  ssl_trusted_certificate <SSL_CHAIN_PATH_ECDSA>;

  ssl_dhparam <DHPARAM_PATH>;

  # Backup self-signed SSL-certs.
  # include snippets/snakeoil.conf;

  ssl_protocols TLSv1.2 TLSv1.3;
  
  # SSL ciphers: RSA + ECDSA
  # Two certificate types (ECDSA, RSA) are needed.
  ssl_ciphers 'TLS-CHACHA20-POLY1305-SHA256:TLS-AES-256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384';

  ssl_ecdh_curve secp521r1:secp384r1;
  ssl_prefer_server_ciphers on;
  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 5m;
  ssl_session_tickets off;
  ssl_stapling on;
  ssl_stapling_verify on;
  resolver <DNS_RESOLVER>;

  include /etc/nginx/snippets/headers.conf;
  
  server_name <SERVER_FQDN>;

  # security - prevent information disclosure about server version
  server_tokens off;

  access_log  /var/log/nginx/<SERVER_FQDN>_access.log;
  error_log   /var/log/nginx/<SERVER_FQDN>_error.log;

  location = / {
    # First attempt to serve request as file, then
    # as directory, then fall back to displaying a 404.
    try_files $uri $uri/ =404;
    index index.html;
  }

  <INCLUDE_SNIPPET_COLLABORA>
  <INCLUDE_SNIPPET_SIGNALING_FORWARDING>
}
